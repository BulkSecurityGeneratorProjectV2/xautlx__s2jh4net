<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.entdiy</groupId>
        <artifactId>entdiy-parent</artifactId>
        <version>1.0.0</version>
    </parent>
    <artifactId>entdiy</artifactId>
    <packaging>war</packaging>
    <name>${project.artifactId}</name>
    <description>The ${project.artifactId} module of entdiy project</description>

    <dependencies>
        <!-- 必选：核心组件和通用基础功能组件 -->
        <dependency>
            <groupId>com.entdiy</groupId>
            <artifactId>entdiy-module-common</artifactId>
            <version>${entdiy.version}</version>
        </dependency>
        <dependency>
            <groupId>com.entdiy</groupId>
            <artifactId>entdiy-assets</artifactId>
            <version>${entdiy.version}</version>
        </dependency>

        <!-- 可选组件列表 -->
        <dependency>
            <groupId>com.entdiy</groupId>
            <artifactId>entdiy-module-schedule</artifactId>
            <version>${entdiy.version}</version>
        </dependency>
        <dependency>
            <groupId>com.entdiy</groupId>
            <artifactId>entdiy-support-aliyun-sms</artifactId>
            <version>${entdiy.version}</version>
        </dependency>
        <dependency>
            <groupId>com.entdiy</groupId>
            <artifactId>entdiy-support-aliyun-oss</artifactId>
            <version>${entdiy.version}</version>
        </dependency>
        <!-- 开发依赖：代码生成组件，定义scope=test用于exec-maven-plugin限定使用 -->
        <dependency>
            <groupId>com.entdiy</groupId>
            <artifactId>entdiy-dev-codebuilder</artifactId>
            <version>${entdiy.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- 开发依赖：UI组件示例、文档等组件 -->
        <dependency>
            <groupId>com.entdiy</groupId>
            <artifactId>entdiy-dev-guide</artifactId>
            <version>${entdiy.version}</version>
        </dependency>
        

        <!-- servlet and jsp-->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- datasource pool -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Spring Session + Redis -->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
        </dependency>

        <!-- http://projectlombok.org/ -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
    </build>

    <profiles>
        <profile>
            <!-- 构建测试或生产部署的war包 -->
            <id>deployment</id>
            <build>
                <resources>
                    <resource>
                        <filtering>false</filtering>
                        <directory>src/main/java</directory>
                        <excludes>
                            <exclude>**/*.java</exclude>
                        </excludes>
                    </resource>
                    <resource>
                        <filtering>true</filtering>
                        <directory>src/main/resources</directory>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <!-- YUI Compressor Maven压缩插件 -->
                        <groupId>net.alchim31.maven</groupId>
                        <artifactId>yuicompressor-maven-plugin</artifactId>
                        <version>1.3.0</version>
                        <executions>
                            <execution>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>compress</goal>
                                </goals>
                                <configuration>
                                    <!-- 读取js,css文件采用UTF-8编码 -->
                                    <encoding>UTF-8</encoding>
                                    <!-- 不显示js可能的错误 -->
                                    <jswarn>false</jswarn>
                                    <!-- 若存在已压缩的文件，会先对比源文件是否有改动 有改动便压缩，无改动就不压缩 -->
                                    <force>true</force>
                                    <!-- 在指定的列号后插入新行 -->
                                    <linebreakpos>-1</linebreakpos>
                                    <!-- 压缩之前先执行聚合文件操作 -->
                                    <preProcessAggregates>true</preProcessAggregates>
                                    <!-- 直接以原文件名作为压缩输出文件名 -->
                                    <nosuffix>true</nosuffix>
                                    <!-- 压缩js和css文件 -->
                                    <includes>
                                        <include>assets/apps/scripts/**/*.js</include>
                                        <include>assets/apps/css/**/*.css</include>
                                        <include>assets/pages/**/*.js</include>
                                        <include>assets/pages/**/*.css</include>
                                        <!-- 追加其他业务相关的js定义，注意：需要在后面的maven-war-plugin的warSourceExcludes同步配置追加 -->
                                    </includes>
                                    <!-- 以下目录和文件不会被压缩 -->
                                    <excludes>
                                        <exclude>**/*.min.js</exclude>
                                        <exclude>**/*.min.css</exclude>
                                        <!-- 数据文件不压缩 -->
                                        <exclude>scripts/data/*.js</exclude>
                                        <!-- 个别组件压缩后运行出现问题，则exclude -->
                                    </excludes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- war打包插件, 设定war包名称不带版本号 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>2.4</version>
                        <configuration>
                            <warName>${project.artifactId}</warName>
                            <!-- war插件会在yuicompressor插件完成之后做webapp资源拷贝操作，需要把yuicompressor处理的文件排除掉，否则会被覆盖 -->
                            <warSourceExcludes>assets/apps/**/*.js,assets/apps/**/*.css,assets/pages/**/*.js,assets/pages/**/*.css</warSourceExcludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
